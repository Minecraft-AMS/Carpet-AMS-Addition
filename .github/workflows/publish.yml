name: _step.publish

on:
  workflow_call:
    inputs:
      publish_channel:
        type: string
        required: true
      publish_target_subproject:
        type: string
        required: true
      publish_target_release_tag:
        description: |-
          The tag of the release you want to append the artifact to.
        type: string
        required: true

jobs:
    publish:
        runs-on: ubuntu-latest
        permissions:
          contents: write
        steps:
        - uses: actions/checkout@v4

        - name: Display context
          run: |
            echo ref_name = ${{ github.ref_name }}
            echo target_subproject = ${{ inputs.publish_target_subproject }}
            echo target_release_tag = ${{ inputs.target_release_tag }}

        - name: Download build artifacts
          uses: actions/download-artifact@v4
          with:
            name: build-artifacts
            path: build-artifacts
        - name: Get git info
          id: get_git_info
          run: |
            short_sha=$(echo ${GITHUB_SHA} | cut -c1-7)
            commit_count=$(git log | grep -e '^commit [a-zA-Z0-9]*' | wc -l)
            echo "short_sha=$short_sha" >> $GITHUB_OUTPUT
            echo "commit_count=$commit_count" >> $GITHUB_OUTPUT

        - name: Get github release information
          if: ${{ github.event_name == 'workflow_dispatch' }}
          id: get_release
          uses: cardinalby/git-get-release-action@1.2.5
          env:
            GITHUB_TOKEN: ${{ github.token }}
          with:
            tag: ${{ inputs.publish_target_release_tag }}

        - name: Read common properties
          id: properties_g
          uses: christian-draeger/read-properties@1.1.1
          with:
            path: gradle.properties
            properties: 'mod_name mod_version'

        - name: Read version-specific properties
          id: properties_v
          uses: christian-draeger/read-properties@1.1.1
          with:
            path: ${{ format('versions/{0}/gradle.properties', inputs.publish_target_subproject) }}
            properties: 'minecraft_version game_versions'

        - name: Fix game version
          id: game_versions
          run: |
            # Fixed \n in game_versions isn't parsed by christian-draeger/read-properties as a line separator
            echo 'value<<EOF' >> $GITHUB_OUTPUT
            echo -e "${{ steps.properties_v.outputs.game_versions }}" >> $GITHUB_OUTPUT
            echo 'EOF' >> $GITHUB_OUTPUT

        - name: Prepare file information
          id: file_info
          run: |
            shopt -s extglob
            FILE_PATHS=$(ls ${{ format('build-artifacts/{0}/build/libs/!(*-@(dev|sources|shadow)).jar', inputs.publish_target_subproject) }})
            if (( ${#FILE_PATHS[@]} != 1 )); then
                echo "Error: Found ${#FILE_PATHS[@]} files, expected exactly 1"
                exit 1
            else
                FILE_PATH=${FILE_PATHS[0]}
            fi
            
            FILE_NAME=$(basename $FILE_PATH)
            FILE_HASH=$(sha256sum $FILE_PATH | awk '{ print $1 }')
            echo "path=$FILE_PATH" >> $GITHUB_OUTPUT
            echo "name=$FILE_NAME" >> $GITHUB_OUTPUT
            echo "hash=$FILE_HASH" >> $GITHUB_OUTPUT
            cat $GITHUB_OUTPUT

        - name: Prepare changelog (Dev Channel)
          if: ${{ inputs.publish_channel == 'dev' }}
          uses: actions/github-script@v7
          id: changelog_dev
          with:
            script: return process.env.CHANGELOG
            result-encoding: string
          env:
            CHANGELOG: |-
              **This version is automatically released by CI Build**
              
              Latest commit log:
            
              ${{ github.event.head_commit.message }}
              
              -------
              
              Build Information
              
              - File name: `${{ steps.file_info.outputs.name }}`
              - SHA-256: `${{ steps.file_info.outputs.hash }}`
              - Built from: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

        - name: Prepare changelog (Stable Channel)
          if: ${{ inputs.publish_channel == 'stable' }}
          uses: actions/github-script@v7
          id: changelog_stable
          with:
            script: return process.env.CHANGELOG
            result-encoding: string
          env:
            CHANGELOG: |-
              ${{ format('{0}{1}', github.event.release.body, steps.get_release.outputs.body) }}
              
              -------
              
              Build Information
              
              - File name: `${{ steps.file_info.outputs.name }}`
              - SHA-256: `${{ steps.file_info.outputs.hash }}`
              - Built from: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

        - name: Publish Minecraft Mods (Dev Channel)
          if: ${{ inputs.publish_channel == 'dev' }}
          uses: Kir-Antipov/mc-publish@v3.3
          with:
            github-tag: ${{ github.ref_name }}.${{ steps.get_git_info.outputs.commit_count }}
            github-token: ${{ secrets.GITHUB_TOKEN }}
            github-prerelease: true
            github-generate-changelog: true

            files: ${{ steps.file_info.outputs.path }}

            name: ${{ format('CI#[{0}]{1} {2}.{3} {4}', github.run_number, steps.properties_g.outputs.mod_name, steps.properties_g.outputs.mod_version, steps.get_git_info.outputs.commit_count, steps.get_git_info.outputs.short_sha) }}
            version: ${{ format('v{0}.{1}-mc{2}', steps.properties_g.outputs.mod_version, steps.get_git_info.outputs.commit_count, steps.properties_v.outputs.minecraft_version) }}
            version-type: alpha

            loaders: fabric
            game-versions: ${{ steps.game_versions.outputs.value }}
            game-version-filter: any
            dependencies: ''  # declare the dependencies explicitly, so mc-publish won't try to load from fabric.mod.json

            retry-attempts: 3
            retry-delay: 10000

        - name: Publish Minecraft Mods (Stable Channel)
          if: ${{ inputs.publish_channel == 'stable' }}
          uses: Kir-Antipov/mc-publish@v3.3
          with:
            modrinth-id: q4fx1eTg
            modrinth-token: ${{ secrets.MODRINTH_API_TOKEN }}

            curseforge-id: 1002635
            curseforge-token: ${{ secrets.CURSEFORGE_API_TOKEN }}

            github-tag: ${{ inputs.publish_target_release_tag }}
            github-token: ${{ secrets.GITHUB_TOKEN }}

            files: ${{ steps.file_info.outputs.path }}

            name: ${{ format('{0} v{1} for mc{2}', steps.properties_g.outputs.mod_name, steps.properties_g.outputs.mod_version, steps.properties_v.outputs.minecraft_version) }}
            version: ${{ format('v{1}-mc{0}', steps.properties_v.outputs.minecraft_version, steps.properties_g.outputs.mod_version) }}
            version-type: release
            changelog: ${{ format('{0}{1}', github.event.release.body, steps.get_release.outputs.body) }}

            loaders: fabric
            game-versions: ${{ steps.game_versions.outputs.value }}
            game-version-filter: any

            retry-attempts: 3
            retry-delay: 10000